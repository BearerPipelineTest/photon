From 57df9e8a9f9ae1aafdde9b86b10ad907627a87dc Mon Sep 17 00:00:00 2001
From: Bram Moolenaar <Bram@vim.org>
Date: Thu, 20 Jan 2022 12:10:48 +0000
Subject: [PATCH] patch 8.2.4151: reading beyond the end of a line

Problem:    Reading beyond the end of a line.
Solution:   For block insert only use the offset for correcting the length.

Formatted the patch

diff --git a/src/ops.c b/src/ops.c
index 7cbc0c2..df4fd51 100644
--- a/src/ops.c
+++ b/src/ops.c
@@ -619,22 +619,8 @@ block_insert(
 
 #ifdef FEAT_MBYTE
 	if (has_mbyte && spaces > 0)
-	{
-	    int off;
-
-	    /* Avoid starting halfway a multi-byte character. */
-	    if (b_insert)
-	    {
-		off = (*mb_head_off)(oldp, oldp + offset + spaces);
-	    }
-	    else
-	    {
-		off = (*mb_off_next)(oldp, oldp + offset);
-		offset += off;
-	    }
-	    spaces -= off;
-	    count -= off;
-	}
+	    // avoid copying part of a multi-byte character
+	     offset -= (*mb_head_off)(oldp, oldp + offset);
 #endif
 
 	newp = alloc_check((unsigned)(STRLEN(oldp)) + s_len + count + 1);
diff --git a/src/testdir/test_visual.vim b/src/testdir/test_visual.vim
index 371fab5..3403492 100644
--- a/src/testdir/test_visual.vim
+++ b/src/testdir/test_visual.vim
@@ -52,3 +52,12 @@ func Test_Visual_inner_quote()
   normal vki'
   bwipe!
 endfunc
+
+func Test_visual_block_insert_round_off()
+  new
+  " The number of characters are tuned to fill a 4096 byte allocated block,
+  " so that valgrind reports going over the end.
+  call setline(1, ['xxxxx', repeat('0', 1350), "\t", repeat('x', 60)])
+  exe "normal gg0\<C-V>GI" .. repeat('0', 1320) .. "\<Esc>"
+  bwipe!
+endfunc
-- 
2.17.1

