From: Prashant S Chauhan <psinghchauha@vmware.com>
Subject: use sysconfig since distutils.sysconfig is depreciated & collection.abc
diff --git a/build/moz.configure/init.configure b/build/moz.configure/init.configure
index 5e07418..331f70e 100644
--- a/build/moz.configure/init.configure
+++ b/build/moz.configure/init.configure
@@ -244,7 +244,7 @@ option(env='PYTHON3', nargs=1, help='Python 3 interpreter (3.5 or later)')
 @imports('os')
 @imports('sys')
 @imports('subprocess')
-@imports('distutils.sysconfig')
+@imports('sysconfig')
 @imports(_from='mozbuild.configure.util', _import='LineIO')
 @imports(_from='mozbuild.virtualenv', _import='VirtualenvManager')
 @imports(_from='mozbuild.virtualenv', _import='verify_python_version')
@@ -375,7 +375,7 @@ def virtualenv_python3(env_python, build_env, mozconfig, help):
         sys.exit(subprocess.call([python] + sys.argv))
 
     # We are now in the virtualenv
-    if not distutils.sysconfig.get_python_lib():
+    if not sysconfig.get_path('purelib'):
         die('Could not determine python site packages directory')
 
     str_version = '.'.join(str(v) for v in version)
diff --git a/python/mach/mach/main.py b/python/mach/mach/main.py
index 319b511..036154d 100644
--- a/python/mach/mach/main.py
+++ b/python/mach/mach/main.py
@@ -16,7 +16,7 @@ import os
 import sys
 import traceback
 import uuid
-from collections import Iterable
+from collections.abc import Iterable
 
 from six import string_types
 
diff --git a/python/mozbuild/mozbuild/backend/configenvironment.py b/python/mozbuild/mozbuild/backend/configenvironment.py
index 20d1a9f..898cabb 100644
--- a/python/mozbuild/mozbuild/backend/configenvironment.py
+++ b/python/mozbuild/mozbuild/backend/configenvironment.py
@@ -9,7 +9,8 @@ import six
 import sys
 import json
 
-from collections import Iterable, OrderedDict
+from collections.abc import Iterable
+from collections import OrderedDict
 from types import ModuleType
 
 import mozpack.path as mozpath
diff --git a/python/mozbuild/mozbuild/makeutil.py b/python/mozbuild/mozbuild/makeutil.py
index 4da1a3b..4ce5684 100644
--- a/python/mozbuild/mozbuild/makeutil.py
+++ b/python/mozbuild/mozbuild/makeutil.py
@@ -7,7 +7,7 @@ from __future__ import absolute_import, print_function, unicode_literals
 import os
 import re
 import six
-from collections import Iterable
+from collections.abc import Iterable
 
 
 class Makefile(object):
diff --git a/python/mozbuild/mozbuild/util.py b/python/mozbuild/mozbuild/util.py
index 044cf64..98ed3ef 100644
--- a/python/mozbuild/mozbuild/util.py
+++ b/python/mozbuild/mozbuild/util.py
@@ -782,7 +782,7 @@ class HierarchicalStringList(object):
         self._strings = StrictOrderingOnAppendList()
         self._children = {}
 
-    class StringListAdaptor(collections.Sequence):
+    class StringListAdaptor(collections.abc.Sequence):
         def __init__(self, hsl):
             self._hsl = hsl
 
diff --git a/python/mozbuild/mozbuild/virtualenv.py b/python/mozbuild/mozbuild/virtualenv.py
index 4c0ab6d..9233d7f 100644
--- a/python/mozbuild/mozbuild/virtualenv.py
+++ b/python/mozbuild/mozbuild/virtualenv.py
@@ -311,10 +311,10 @@ class VirtualenvManager(object):
         environment is not configured properly, packages could be installed
         into the wrong place. This is how virtualenv's work.
         """
-        import distutils.sysconfig
+        import sysconfig
 
         packages = self.packages()
-        python_lib = distutils.sysconfig.get_python_lib()
+        python_lib = sysconfig.get_path('purelib')
 
         def handle_package(package):
             if package[0] == 'setup.py':
@@ -421,7 +421,7 @@ class VirtualenvManager(object):
         try:
             old_target = os.environ.get('MACOSX_DEPLOYMENT_TARGET', None)
             sysconfig_target = \
-                distutils.sysconfig.get_config_var('MACOSX_DEPLOYMENT_TARGET')
+                sysconfig.get_config_var('MACOSX_DEPLOYMENT_TARGET')
 
             if sysconfig_target is not None:
                 os.environ['MACOSX_DEPLOYMENT_TARGET'] = sysconfig_target
diff --git a/testing/mozbase/manifestparser/manifestparser/filters.py b/testing/mozbase/manifestparser/manifestparser/filters.py
index 287ee03..b1d6080 100644
--- a/testing/mozbase/manifestparser/manifestparser/filters.py
+++ b/testing/mozbase/manifestparser/manifestparser/filters.py
@@ -12,7 +12,8 @@ from __future__ import absolute_import
 
 import itertools
 import os
-from collections import defaultdict, MutableSequence
+from collections import defaultdict
+from collections.abc import MutableSequence
 
 import six
 from six import string_types
diff --git a/testing/mozbase/versioninfo.py b/testing/mozbase/versioninfo.py
index 91d1a04..8c16800 100755
--- a/testing/mozbase/versioninfo.py
+++ b/testing/mozbase/versioninfo.py
@@ -11,7 +11,7 @@ from commit messages.
 
 from __future__ import absolute_import, print_function
 
-from collections import Iterable
+from collections.abc import Iterable
 from distutils.version import StrictVersion
 import argparse
 import os
diff --git a/testing/mozharness/external_tools/virtualenv/virtualenv.py b/testing/mozharness/external_tools/virtualenv/virtualenv.py
index c0767e9..f5e71f4 100755
--- a/testing/mozharness/external_tools/virtualenv/virtualenv.py
+++ b/testing/mozharness/external_tools/virtualenv/virtualenv.py
@@ -22,7 +22,7 @@ import logging
 import zlib
 import errno
 import glob
-import distutils.sysconfig
+import sysconfig
 import struct
 import subprocess
 import pkgutil
@@ -1148,10 +1148,9 @@ def install_python(home_dir, lib_dir, inc_dir, bin_dir, site_packages, clear, sy
     else:
         logger.debug('No include dir %s' % stdinc_dir)
 
-    platinc_dir = distutils.sysconfig.get_python_inc(plat_specific=1)
+    platinc_dir = sysconfig.get_path('platinclude')
     if platinc_dir != stdinc_dir:
-        platinc_dest = distutils.sysconfig.get_python_inc(
-            plat_specific=1, prefix=home_dir)
+        platinc_dest = sysconfig.get_path('platinclude')
         if platinc_dir == platinc_dest:
             # Do platinc_dest manually due to a CPython bug;
             # not http://bugs.python.org/issue3386 but a close cousin
@@ -1516,7 +1515,7 @@ def fix_lib64(lib_dir, symlink=True):
         logger.debug('PyPy detected, skipping lib64 symlinking')
         return
     # Check we have a lib64 library path
-    if not [p for p in distutils.sysconfig.get_config_vars().values()
+    if not [p for p in sysconfig.get_config_vars().values()
             if isinstance(p, basestring) and 'lib64' in p]:
         return
 
diff --git a/testing/mozharness/mozharness/base/python.py b/testing/mozharness/mozharness/base/python.py
index 17ce28a..2def54b 100644
--- a/testing/mozharness/mozharness/base/python.py
+++ b/testing/mozharness/mozharness/base/python.py
@@ -147,8 +147,8 @@ class VirtualenvMixin(object):
         python = self.query_python_path()
         self.site_packages_path = self.get_output_from_command(
             [python, '-c',
-             'from distutils.sysconfig import get_python_lib; ' +
-             'print(get_python_lib())'])
+             'from sysconfig import get_path; ' +
+             'print(get_path('purelib'))'])
         return self.site_packages_path
 
     def package_versions(self, pip_freeze_output=None, error_level=WARNING, log_output=False):
diff --git a/testing/web-platform/tests/tools/third_party/hyper/hyper/http11/connection.py b/testing/web-platform/tests/tools/third_party/hyper/hyper/http11/connection.py
index 61361c3..9a38ae5 100644
--- a/testing/web-platform/tests/tools/third_party/hyper/hyper/http11/connection.py
+++ b/testing/web-platform/tests/tools/third_party/hyper/hyper/http11/connection.py
@@ -10,7 +10,7 @@ import os
 import socket
 import base64
 
-from collections import Iterable, Mapping
+from collections.abc import Iterable, Mapping
 
 import collections
 from hyperframe.frame import SettingsFrame
diff --git a/testing/web-platform/tests/tools/third_party/more-itertools/more_itertools/more.py b/testing/web-platform/tests/tools/third_party/more-itertools/more_itertools/more.py
index d517250..5265100 100644
--- a/testing/web-platform/tests/tools/third_party/more-itertools/more_itertools/more.py
+++ b/testing/web-platform/tests/tools/third_party/more-itertools/more_itertools/more.py
@@ -20,7 +20,7 @@ from sys import maxsize, version_info
 try:
     from collections.abc import Sequence
 except ImportError:
-    from collections import Sequence
+    from collections.abc import Sequence
 
 from six import binary_type, string_types, text_type
 from six.moves import filter, map, range, zip, zip_longest
diff --git a/testing/web-platform/tests/tools/third_party/more-itertools/more_itertools/tests/test_more.py b/testing/web-platform/tests/tools/third_party/more-itertools/more_itertools/tests/test_more.py
index 2023ba6..aed49d5 100644
--- a/testing/web-platform/tests/tools/third_party/more-itertools/more_itertools/tests/test_more.py
+++ b/testing/web-platform/tests/tools/third_party/more-itertools/more_itertools/tests/test_more.py
@@ -1663,7 +1663,7 @@ class SequenceViewTests(TestCase):
             self.assertEqual(view[i], seq[i])
 
     def test_abc_methods(self):
-        # collections.Sequence should provide all of this functionality
+        # collections.abc.Sequence should provide all of this functionality
         seq = ('a', 'b', 'c', 'd', 'e', 'f', 'f')
         view = mi.SequenceView(seq)
 
diff --git a/third_party/python/more-itertools/more_itertools/more.py b/third_party/python/more-itertools/more_itertools/more.py
index 05e851e..909ce54 100644
--- a/third_party/python/more-itertools/more_itertools/more.py
+++ b/third_party/python/more-itertools/more_itertools/more.py
@@ -21,7 +21,7 @@ from sys import maxsize, version_info
 try:
     from collections.abc import Sequence
 except ImportError:
-    from collections import Sequence
+    from collections.abc import Sequence
 
 from six import binary_type, string_types, text_type
 from six.moves import filter, map, range, zip, zip_longest
diff --git a/third_party/python/more-itertools/more_itertools/tests/test_more.py b/third_party/python/more-itertools/more_itertools/tests/test_more.py
index a1b1e43..3a82807 100644
--- a/third_party/python/more-itertools/more_itertools/tests/test_more.py
+++ b/third_party/python/more-itertools/more_itertools/tests/test_more.py
@@ -1768,7 +1768,7 @@ class SequenceViewTests(TestCase):
             self.assertEqual(view[i], seq[i])
 
     def test_abc_methods(self):
-        # collections.Sequence should provide all of this functionality
+        # collections.abc.Sequence should provide all of this functionality
         seq = ('a', 'b', 'c', 'd', 'e', 'f', 'f')
         view = mi.SequenceView(seq)
 
diff --git a/third_party/python/pathlib2/pathlib2/__init__.py b/third_party/python/pathlib2/pathlib2/__init__.py
index 2eb41e3..3dcce6a 100644
--- a/third_party/python/pathlib2/pathlib2/__init__.py
+++ b/third_party/python/pathlib2/pathlib2/__init__.py
@@ -12,7 +12,7 @@ import posixpath
 import re
 import six
 import sys
-from collections import Sequence
+from collections.abc import Sequence
 from errno import EINVAL, ENOENT, ENOTDIR, EEXIST, EPERM, EACCES
 from operator import attrgetter
 
diff --git a/third_party/python/pipenv/pipenv/patched/pew/pew.py b/third_party/python/pipenv/pipenv/patched/pew/pew.py
index 2d3889a..bda15fa 100644
--- a/third_party/python/pipenv/pipenv/patched/pew/pew.py
+++ b/third_party/python/pipenv/pipenv/patched/pew/pew.py
@@ -386,8 +386,8 @@ def sitepackages_dir(env=os.environ.get('VIRTUAL_ENV')):
         sys.exit('ERROR: no virtualenv active')
     else:
         env_python = get_workon_home() / env / env_bin_dir / 'python'
-        return Path(invoke(str(env_python), '-c', 'import distutils; \
-print(distutils.sysconfig.get_python_lib())').out)
+        return Path(invoke(str(env_python), '-c', 'import sysconfig; \
+print(sysconfig.get_path('purelib'))').out)
 
 
 def add_cmd(argv):
diff --git a/third_party/python/pipenv/pipenv/vendor/pathlib2.py b/third_party/python/pipenv/pipenv/vendor/pathlib2.py
index 87917ff..b785b97 100644
--- a/third_party/python/pipenv/pipenv/vendor/pathlib2.py
+++ b/third_party/python/pipenv/pipenv/vendor/pathlib2.py
@@ -8,7 +8,7 @@ import posixpath
 import re
 import six
 import sys
-from collections import Sequence
+from collections.abc import Sequence
 from contextlib import contextmanager
 from errno import EINVAL, ENOENT, ENOTDIR, EEXIST
 from operator import attrgetter
diff --git a/third_party/python/responses/responses.py b/third_party/python/responses/responses.py
index 9de9368..ff23b33 100644
--- a/third_party/python/responses/responses.py
+++ b/third_party/python/responses/responses.py
@@ -17,7 +17,7 @@ from requests.utils import cookiejar_from_dict
 try:
     from collections.abc import Sequence, Sized
 except ImportError:
-    from collections import Sequence, Sized
+    from collections.abc import Sequence, Sized
 
 try:
     from requests.packages.urllib3.response import HTTPResponse
diff --git a/third_party/python/virtualenv/tests/conftest.py b/third_party/python/virtualenv/tests/conftest.py
index c8990ce..c356f57 100644
--- a/third_party/python/virtualenv/tests/conftest.py
+++ b/third_party/python/virtualenv/tests/conftest.py
@@ -31,7 +31,7 @@ def clean_python(tmp_path_factory):
             [
                 os.path.join(bin_dir, virtualenv.EXPECTED_EXE),
                 "-c",
-                "from distutils.sysconfig import get_python_lib; print(get_python_lib())",
+                "from sysconfig import get_path; print(get_path('purelib'))",
             ],
             universal_newlines=True,
         ).strip()
diff --git a/third_party/python/virtualenv/virtualenv.py b/third_party/python/virtualenv/virtualenv.py
index 9eaedaf..e0c0d30 100755
--- a/third_party/python/virtualenv/virtualenv.py
+++ b/third_party/python/virtualenv/virtualenv.py
@@ -22,7 +22,7 @@ import base64
 import codecs
 import contextlib
 import distutils.spawn
-import distutils.sysconfig
+import sysconfig
 import errno
 import glob
 import logging
@@ -1480,9 +1480,9 @@ def install_python(home_dir, lib_dir, inc_dir, bin_dir, site_packages, clear, sy
     else:
         logger.debug("No include dir %s", standard_lib_include_dir)
 
-    platform_include_dir = distutils.sysconfig.get_python_inc(plat_specific=1)
+    platform_include_dir = sysconfig.get_path('platinclude')
     if platform_include_dir != standard_lib_include_dir:
-        platform_include_dest = distutils.sysconfig.get_python_inc(plat_specific=1, prefix=home_dir)
+        platform_include_dest = sysconfig.get_path('platinclude')
         if platform_include_dir == platform_include_dest:
             # Do platinc_dest manually due to a CPython bug;
             # not http://bugs.python.org/issue3386 but a close cousin
@@ -1804,7 +1804,7 @@ def fix_local_scheme(home_dir, symlink=True):
         pass
     else:
         # noinspection PyProtectedMember
-        if sysconfig._get_default_scheme() == "posix_local":
+        if sysconfig.get_default_scheme() == "posix_local":
             local_path = os.path.join(home_dir, "local")
             if not os.path.exists(local_path):
                 os.mkdir(local_path)
@@ -1830,7 +1830,7 @@ def fix_lib64(lib_dir, symlink=True):
         logger.debug("PyPy detected, skipping lib64 symlinking")
         return
     # Check we have a lib64 library path
-    if not [p for p in distutils.sysconfig.get_config_vars().values() if isinstance(p, basestring) and "lib64" in p]:
+    if not [p for p in sysconfig.get_config_vars().values() if isinstance(p, basestring) and "lib64" in p]:
         return
 
     logger.debug("This system uses lib64; symlinking lib64 to lib")
