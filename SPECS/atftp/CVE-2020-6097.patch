Fix for DoS issue CVE-2020-6097

"sockaddr_print_addr" of tftpd can be triggered remotely to call
assert(), which will crash the tftpd daemon. See:
https://talosintelligence.com/vulnerability_reports/TALOS-2020-1029

"sockaddr_print_addr" originaly had two features:
1) returning pointer to string of the incoming ip address
2) checking whether ss_family of the connection is supported

To fix the issue, a separate function "sockaddr_family_supported" is
used to take care of 2) and "sockaddr_print_addr" returns an error
message string for unsupported cases when using 1) insert of calling
assert().

--- a/tftp_def.c	2021-01-20 14:40:34.713956055 +0530
+++ b/tftp_def.c	2021-01-20 14:42:18.341010422 +0530
@@ -180,6 +180,16 @@ int Gethostbyname(char *addr, struct hos
      return OK;
 }
 
+int
+sockaddr_family_supported(const struct sockaddr_storage *ss)
+{
+     if (ss->ss_family == AF_INET || ss->ss_family == AF_INET6)
+          return 1;
+     else
+          return 0;
+}
+
+
 char *
 sockaddr_print_addr(const struct sockaddr_storage *ss, char *buf, size_t len)
 {
@@ -189,7 +199,7 @@ sockaddr_print_addr(const struct sockadd
      else if (ss->ss_family == AF_INET6)
           addr = &((const struct sockaddr_in6 *)ss)->sin6_addr;
      else
-          assert(!"sockaddr_print: unsupported address family");
+          return "sockaddr_print: unsupported address family";
      return (char *)inet_ntop(ss->ss_family, addr, buf, len);
 }
 
--- a/tftp_def.h	2021-01-20 14:42:41.453691665 +0530
+++ b/tftp_def.h	2021-01-20 14:42:59.282217168 +0530
@@ -53,7 +53,7 @@ int timeval_diff(struct timeval *res, st
 int print_eng(double value, char *string, int size, char *format);
 inline char *Strncpy(char *to, const char *from, size_t size);
 int Gethostbyname(char *addr, struct hostent *host);
-
+int sockaddr_family_supported(const struct sockaddr_storage *ss);
 char *sockaddr_print_addr(const struct sockaddr_storage *, char *, size_t);
 #define SOCKADDR_PRINT_ADDR_LEN INET6_ADDRSTRLEN
 uint16_t sockaddr_get_port(const struct sockaddr_storage *);
--- a/tftpd.c	2021-01-20 14:43:09.506518535 +0530
+++ b/tftpd.c	2021-01-20 14:44:47.089394910 +0530
@@ -644,6 +644,11 @@ void *tftpd_receive_request(void *arg)
      }
 
 #ifdef HAVE_WRAP
+     if (!abort && !sockaddr_family_supported(&data->client_info->client))
+     {
+          logger(LOG_ERR, "Connection from unsupported network address family refused");
+          abort = 1;
+     }
      if (!abort)
      {
           /* Verify the client has access. We don't look for the name but
--- a/tftpd_mtftp.c	2021-01-20 14:45:09.518056034 +0530
+++ b/tftpd_mtftp.c	2021-01-20 14:46:20.760156075 +0530
@@ -393,6 +393,11 @@ void *tftpd_mtftp_server(void *arg)
                                         &data_size, data->data_buffer);
 
 #ifdef HAVE_WRAP
+               if (!sockaddr_family_supported(&sa))
+               {
+                    logger(LOG_ERR, "mtftp: Connection from unsupported network address family refused");
+                    continue;
+               }
                /* Verify the client has access. We don't look for the name but
                   rely only on the IP address for that. */
                sockaddr_print_addr(&sa, addr_str, sizeof(addr_str));
