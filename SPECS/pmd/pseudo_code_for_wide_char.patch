From 8c12ac4a05b0376cd558b7d2c227c6ca41ab3348 Mon Sep 17 00:00:00 2001
From: Tapas Kundu <tkundu@vmware.com>
Date: Fri, 4 Dec 2020 13:18:31 +0000
Subject: [PATCH] pmd: Added Pseudo code for wide char helper functionality

Change-Id: I7215fa378d73d18b0d40a27ee544b6b0a445dcf3
Signed-off-by: Tapas Kundu <tkundu@vmware.com>
---
 .../wide-char-helper-API-description.md       | 59 +++++++++++++++++++
 1 file changed, 59 insertions(+)
 create mode 100644 Documentations/wide-char-helper-API-description.md

diff --git a/Documentations/wide-char-helper-API-description.md b/Documentations/wide-char-helper-API-description.md
new file mode 100644
index 0000000..0353256
--- /dev/null
+++ b/Documentations/wide-char-helper-API-description.md
@@ -0,0 +1,59 @@
+
+This function calculates the length of wide char string.
+
+IN: InputString (wide char string)
+
+This function calculates the length of wide char string.
+function PMDWC16StringNumChars (InputString)
+{
+    length=0
+    for every 16-bit character in InputString
+      Increment length by 1
+    return length
+}
+
+This function converts char string with UTF-8 encoding to
+wide char string with UCS-2LE encoding.
+
+OUT: OutputString (wide char string)
+IN: InputString (char string)
+
+function PMDConvertStringToWC16 (OutputString, InputString)
+{
+    conv_desc = iconv_open("UCS-2LE", "")
+    If conv_desc equals ((iconv_t) -1):
+        return with error
+
+    Allocate destination buffer:
+        Calculate destination size "OutputSize" from the InputString and allocate OutputString.
+
+    Calculate InputSize from InputString.
+
+    nconv = iconv(conv_desc, InputString, InputSize, OutputString, OutputSize)
+    If nconv equals -1:
+        Deallocate OutputString
+        return with error
+}
+
+This function converts wide char string with UCS-2LE encoding to
+char string with UTF-8 encoding.
+
+OUT: OutputString (char string)
+IN: InputString (wide char string)
+
+function PMDConvertWC16ToString (OutputString, InputString)
+{
+    conv_desc = iconv_open("", "UCS-2LE")
+    If conv_desc equals ((iconv_t) -1):
+        return with error
+
+    Allocate destination buffer:
+        Calculate destination size "OutputSize" from the InputString and allocate OutputString.
+
+    Calculate InputSize from InputString.
+
+    nconv = iconv(conv_desc, InputString, InputSize, OutputString, OutputSize)
+    If nconv equals -1:
+        Deallocate OutputString
+        return with error
+}
