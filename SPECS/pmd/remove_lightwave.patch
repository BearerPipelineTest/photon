From a6e43d7b9f4009017a336f2e2eabc35a0c34ae17 Mon Sep 17 00:00:00 2001
From: Shreyas B <shreyasb@vmware.com>
Date: Tue, 20 Oct 2020 15:23:55 +0000
Subject: [PATCH] Remove PMD Dependencies on LightWave

After this changes folowing features not supported:
1. Kerberos Auth.
2. LDAP Auth.

Change-Id: I8e42c65b293256ee78ca481cd505d03976d23d4d
---
 client/includes.h            |   1 -
 common/gssapi_creds_plugin.h |  52 ++++++++++
 common/includes.h            |   2 +
 configure.ac                 |  68 -------------
 pmd.spec.in                  |   7 +-
 privsep/Makefile.am          |   9 +-
 privsep/includes.h           |   2 -
 privsep/rpcapi.c             |   1 -
 server/Makefile.am           |   9 +-
 server/includes.h            |   2 -
 server/security/Makefile.am  |   4 +-
 server/security/authz.c      | 179 +----------------------------------
 server/security/includes.h   |   4 +-
 13 files changed, 63 insertions(+), 277 deletions(-)
 create mode 100644 common/gssapi_creds_plugin.h

diff --git a/client/includes.h b/client/includes.h
index 5726ef6..5f35c41 100644
--- a/client/includes.h
+++ b/client/includes.h
@@ -60,4 +60,3 @@
 
 #include <netmgmt/netmgr.h>
 #include "pmd_netmgr.h"
-#include <gssapi_creds_plugin.h>
diff --git a/common/gssapi_creds_plugin.h b/common/gssapi_creds_plugin.h
new file mode 100644
index 0000000..9518424
--- /dev/null
+++ b/common/gssapi_creds_plugin.h
@@ -0,0 +1,52 @@
+/*
+ * Copyright © 2020 VMware, Inc.  All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the “License”); you may not
+ * use this file except in compliance with the License.  You may obtain a copy
+ * of the License at http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an “AS IS” BASIS, without
+ * warranties or conditions of any kind, EITHER EXPRESS OR IMPLIED.  See the
+ * License for the specific language governing permissions and limitations
+ * under the License.
+ */
+
+#pragma once
+
+//default name for unix creds lib
+#define GSSAPI_UNIX_CREDS_DEFAULT_SO         "libgssapi_unix_creds.so"
+
+//env variable to override default unix privilege separation creds lib
+#define GSSAPI_UNIX_PRIVSEP_CREDS_OVERRIDE   "GSSAPI_UNIX_PRIVSEP_CREDS_OVERRIDE"
+
+//supported types. used to lookup creds lib
+typedef enum
+{
+    PLUGIN_TYPE_MIN = -1,
+    PLUGIN_TYPE_UNIX,
+    PLUGIN_TYPE_SRP,
+    //Add new types before PLUGIN_TYPE_MAX
+    PLUGIN_TYPE_MAX
+}GSSAPI_PLUGIN_TYPE;
+
+//creds lib implements this function.
+//takes in plugin type, username,
+//returns salt and srp s and v values.
+typedef
+int
+(*PFN_GET_HASHED_CREDS)(
+    int plugin_type,
+    const char *user_name,
+    char **ret_salt,
+    unsigned char **ret_bytes_s,
+    int *ret_len_s,
+    unsigned char **ret_bytes_v,
+    int *ret_len_v
+    );
+
+typedef struct _CREDS_PLUGIN_INTERFACE_
+{
+    PFN_GET_HASHED_CREDS pfnGetHashedCreds;
+}CREDS_PLUGIN_INTERFACE, *PCREDS_PLUGIN_INTERFACE;
+
diff --git a/common/includes.h b/common/includes.h
index f0691dd..a189b9b 100644
--- a/common/includes.h
+++ b/common/includes.h
@@ -43,3 +43,5 @@
 #include <pmd_fwmgmt_types.h>
 #include <pmd_rolemgmt_types.h>
 #include <pmd_usermgmt_types.h>
+
+#include "gssapi_creds_plugin.h"
diff --git a/configure.ac b/configure.ac
index bd6c195..d1ed61c 100644
--- a/configure.ac
+++ b/configure.ac
@@ -101,74 +101,6 @@ CPPFLAGS="$CPPFLAGS $LW_INCLUDES"
 AC_CHECK_HEADERS(lw/base.h lw/types.h uuid/uuid.h lwrpcrt/lwrpcrt.h dce/rpc.h)
 CPPFLAGS="$saved_CPPFLAGS"
 
-AC_ARG_WITH([vmdirclient],
-    [AC_HELP_STRING([--with-vmdirclient=<dir>], [use rest binaries rooted at prefix <dir> ])],
-    [
-        VMDIRCLI_BASE_PATH="$withval"
-        VMDIRCLI_INCLUDES="-I$withval/include"
-        VMDIRCLI_LDFLAGS="-L$withval/lib64"
-    ],
-    [
-        VMDIRCLI_BASE_PATH="/opt/vmware/"
-        VMDIRCLI_INCLUDES="-I/opt/vmware/include/"
-        VMDIRCLI_LDFLAGS="-L/opt/vmware/lib64/"
-    ])
-
-AC_SUBST(VMDIRCLI_BASE_PATH)
-AC_SUBST(VMDIRCLI_INCLUDES)
-AC_SUBST(VMDIRCLI_LDFLAGS)
-
-saved_CPPFLAGS="$CPPFLAGS"
-CPPFLAGS="$CPPFLAGS $VMDIRCLI_INCLUDES $DCERPC_INCLUDES"
-echo "Looking for vmdir cli headers"
-AC_CHECK_HEADERS(vmdirclient.h)
-#vmrest lib
-AC_CHECK_LIB(
-    [vmdirclient],
-    [VmDirOpenServerConnection],
-    [VMDIRCLI_LIBS="-lvmdirclient"],
-    [],
-    [$VMDIRCLI_LDFLAGS])
-
-AC_SUBST(VMDIRCLI_LIBS)
-
-CPPFLAGS="$saved_CPPFLAGS"
-
-AC_ARG_WITH([vmafdclient],
-    [AC_HELP_STRING([--with-vmafdclient=<dir>], [use rest binaries rooted at prefix <dir> ])],
-    [
-        VMAFD_BASE_PATH="$withval"
-        VMAFD_INCLUDES="-I$withval/include"
-        VMAFD_LDFLAGS="-L$withval/lib64"
-    ],
-    [
-        VMAFD_BASE_PATH="/opt/vmware/"
-        VMAFD_INCLUDES="-I/opt/vmware/include/"
-        VMAFD_LDFLAGS="-L/opt/vmware/lib64/"
-    ])
-
-AC_SUBST(VMAFD_BASE_PATH)
-AC_SUBST(VMAFD_INCLUDES)
-AC_SUBST(VMAFD_LDFLAGS)
-
-AC_SUBST(VMAFD_LDFLAGS)
-
-saved_CPPFLAGS="$CPPFLAGS"
-CPPFLAGS="$CPPFLAGS $VMAFD_INCLUDES $DCERPC_INCLUDES"
-echo "Looking for vmafd headers"
-AC_CHECK_HEADERS(vmafdclient.h)
-#vmafdclient lib
-AC_CHECK_LIB(
-    [vmafdclient],
-    [VmAfdOpenServerA],
-    [VMAFD_LIBS="-lvmafdclient"],
-    [],
-    [$VMAFD_LDFLAGS])
-AC_SUBST(VMAFD_LIBS)
-
-CPPFLAGS="$saved_CPPFLAGS"
-LIBS="$saved_LIBS"
-
 AC_ARG_ENABLE([python],
     [AS_HELP_STRING([--enable-python], [build pmd python bindings (default: disabled)])],
     [
diff --git a/pmd.spec.in b/pmd.spec.in
index 0eba635..c620857 100644
--- a/pmd.spec.in
+++ b/pmd.spec.in
@@ -5,7 +5,7 @@
 Summary:	Photon Management Daemon
 Name:		pmd
 Version:	@VERSION@
-Release:	5%{?dist}
+Release:	6%{?dist}
 License:	Apache 2.0
 URL:            https://www.github.com/vmware/pmd
 Group:		Applications/System
@@ -14,7 +14,6 @@ Requires:       netmgmt
 Requires:	systemd
 Requires:	tdnf >= 1.2.0
 Requires:	c-rest-engine
-Requires:       lightwave-client-libs
 Requires:       jansson
 Requires:       copenapi
 Requires:       %{name}-libs = %{version}-%{release}
@@ -22,7 +21,6 @@ BuildRequires:	popt-devel
 BuildRequires:	rpm-devel
 BuildRequires:	tdnf-devel >= 1.2.0
 BuildRequires:	c-rest-engine-devel
-BuildRequires:  lightwave-devel
 BuildRequires:	netmgmt-devel
 BuildRequires:  jansson-devel
 BuildRequires:  copenapi-devel
@@ -47,7 +45,6 @@ BuildRequires:	netmgmt-cli-devel >= 1.0.4-2
 Summary: photon management daemon cmd line cli
 Requires: %{name}-libs = %{version}-%{release}
 Requires: likewise-open >= 6.2.0
-Requires: lightwave-client-libs
 
 %description cli
 photon management daemon cmd line cli
@@ -302,6 +299,8 @@ rm -rf %{buildroot}/*
     %{_python3_sitearch}/%{name}_python-*.egg-info
 
 %changelog
+*       Fri Oct 16 2020 Shreyas B <shreyasb@vmware.com> 0.1-6
+-       Remove PMD Dependencies on LightWave.
 *       Fri Aug 21 2020 Tapas Kundu <tkundu@vmware.com> 0.1-5
 -       Added clean, check-local, provides and check-update
 *       Fri Jul 24 2020 Tapas Kundu <tkundu@vmware.com> 0.1-4
diff --git a/privsep/Makefile.am b/privsep/Makefile.am
index 7d8ba18..87a7876 100644
--- a/privsep/Makefile.am
+++ b/privsep/Makefile.am
@@ -3,9 +3,7 @@ bin_PROGRAMS = pmdprivsepd
 pmdprivsepd_CPPFLAGS = \
     -I$(top_srcdir)/include \
     -I$(top_srcdir)/idl \
-    @LW_INCLUDES@ \
-    @VMDIRCLI_INCLUDES@ \
-    @VMAFD_INCLUDES@
+    @LW_INCLUDES@
 
 pmdprivsepd_SOURCES = \
     global.c \
@@ -56,10 +54,7 @@ pmdprivsepd_LDADD =  \
     @top_builddir@/server/common/libsrvcommon.la \
     @top_builddir@/privsep/demo/libdemosrv.la \
     @DCERPC_LIBS@ \
-    @VMDIRCLI_LIBS@ \
-    @VMAFD_LIBS@ \
     @LWBASE_LIBS@ \
-    -lvmdirclient \
     -ltdnf \
     -lnetmgr \
     -lpthread \
@@ -68,7 +63,5 @@ pmdprivsepd_LDADD =  \
     -ldl
 
 pmdprivsepd_LDFLAGS = \
-    @VMAFD_LDFLAGS@ \
-    @VMDIRCLI_LDFLAGS@ \
     @DCERPC_LDFLAGS@ \
     @LW_LDFLAGS@
diff --git a/privsep/includes.h b/privsep/includes.h
index 2c3d180..6ceaed6 100644
--- a/privsep/includes.h
+++ b/privsep/includes.h
@@ -38,8 +38,6 @@
 #include <gssapi/gssapi.h>
 #include <gssapi/gssapi_generic.h>
 
-#include <vmdirclient.h>
-#include <vmafdclient.h>
 #include <vmrest.h>
 #include <tdnf/tdnf.h>
 #include <netmgmt/netmgr.h>
diff --git a/privsep/rpcapi.c b/privsep/rpcapi.c
index 33d84a5..3dfaa81 100644
--- a/privsep/rpcapi.c
+++ b/privsep/rpcapi.c
@@ -13,7 +13,6 @@
  */
 
 #include "includes.h"
-#include <gssapi_creds_plugin.h>
 #include <dlfcn.h>
 
 unsigned32
diff --git a/server/Makefile.am b/server/Makefile.am
index 6fdc4e9..784d88a 100644
--- a/server/Makefile.am
+++ b/server/Makefile.am
@@ -6,9 +6,7 @@ pmd_CPPFLAGS = \
     -I$(top_srcdir)/include \
     -I$(top_srcdir)/idl \
     @LW_INCLUDES@ \
-    @CREST_INCLUDES@ \
-    @VMDIRCLI_INCLUDES@ \
-    @VMAFD_INCLUDES@
+    @CREST_INCLUDES@
 
 pmd_SOURCES = \
     api.c \
@@ -88,11 +86,8 @@ pmd_LDADD =  \
     @DCERPC_LIBS@ \
     @JANSSON_LIBS@ \
     @CREST_LIBS@ \
-    @VMDIRCLI_LIBS@ \
-    @VMAFD_LIBS@ \
     @COPENAPI_LIBS@ \
     @LWBASE_LIBS@ \
-    -lvmdirclient \
     -lnetmgr \
     -lpthread \
     -lcrypt \
@@ -100,8 +95,6 @@ pmd_LDADD =  \
     -lgssapi_krb5
 
 pmd_LDFLAGS = \
-    @VMAFD_LDFLAGS@ \
-    @VMDIRCLI_LDFLAGS@ \
     @CREST_LDFLAGS@ \
     @DCERPC_LDFLAGS@ \
     @LW_LDFLAGS@
diff --git a/server/includes.h b/server/includes.h
index 1c2be75..9964d48 100644
--- a/server/includes.h
+++ b/server/includes.h
@@ -34,8 +34,6 @@
 #include <gssapi/gssapi.h>
 #include <gssapi/gssapi_generic.h>
 
-#include <vmdirclient.h>
-#include <vmafdclient.h>
 #include <vmrest.h>
 #include <tdnf/tdnf.h>
 #include <netmgmt/netmgr.h>
diff --git a/server/security/Makefile.am b/server/security/Makefile.am
index 05163fc..cf00428 100644
--- a/server/security/Makefile.am
+++ b/server/security/Makefile.am
@@ -2,9 +2,7 @@ noinst_LTLIBRARIES = libpmdsecurity.la
 
 libpmdsecurity_la_CPPFLAGS = \
     -I$(top_srcdir)/include \
-    @LW_INCLUDES@ \
-    @VMDIRCLI_INCLUDES@ \
-    @VMAFD_INCLUDES@
+    @LW_INCLUDES@
 
 libpmdsecurity_la_SOURCES = \
     apisecurity.c \
diff --git a/server/security/authz.c b/server/security/authz.c
index 7a05b86..38d2bdb 100644
--- a/server/security/authz.c
+++ b/server/security/authz.c
@@ -69,109 +69,6 @@ member_of_groups(
     return is_member;
 }
 
-uint32_t
-open_vmdir_connection(
-    char *pszDCName,
-    char *pszDomain,
-    char *pszAccount,
-    char *pszPassword,
-    PVMDIR_CONNECTION* ppConnection
-    )
-{
-    uint32_t dwError = 0;
-    char *pszURI = NULL;
-    PVMDIR_CONNECTION pConnection = NULL;
-
-    dwError = PMDAllocateStringPrintf(
-                &pszURI,
-                "ldap://%s:%d",
-                pszDCName,
-                LDAP_PORT);
-    BAIL_ON_PMD_ERROR(dwError);
-
-    dwError = VmDirConnectionOpen(
-                pszURI,
-                pszDomain,
-                pszAccount,
-                pszPassword,
-                &pConnection);
-    BAIL_ON_PMD_ERROR(dwError);
-    *ppConnection = pConnection;
-cleanup:
-
-    PMDFreeMemory(pszURI);
-    return dwError;
-error:
-    if(ppConnection)
-    {
-        *ppConnection = NULL;
-    }
-    if(pConnection)
-    {
-        VmDirConnectionClose(pConnection);
-    }
-    goto cleanup;
-}
-
-static
-uint32_t
-get_vmdir_memberships(
-    const char* pszUPNName,
-    char  ***pppszMemberships,
-    uint32_t* pdwMemberships)
-{
-    uint32_t dwError = 0;
-    PVMDIR_CONNECTION pConn = NULL;
-    char* pszDCName = NULL;
-    char* pszAccount = NULL;
-    char* pszPassword = NULL;
-    char* pszDomain = NULL;
-    char **ppszMemberships = NULL;
-    uint32_t  dwMemberships = 0;
-
-    dwError = VmAfdGetDCNameA(NULL, &pszDCName);
-    BAIL_ON_PMD_ERROR(dwError);
-
-    dwError = VmAfdGetDomainName(NULL, &pszDomain);
-    BAIL_ON_PMD_ERROR(dwError);
-
-    dwError = VmAfdGetMachineAccountInfoA(NULL, &pszAccount, &pszPassword);
-    BAIL_ON_PMD_ERROR(dwError);
-
-    dwError = open_vmdir_connection(pszDCName,
-                            pszDomain,
-                            pszAccount,
-                            pszPassword,
-                            &pConn);
-
-    BAIL_ON_PMD_ERROR(dwError);
-
-    dwError = VmDirGetMemberships(
-                    pConn,
-                    pszUPNName,
-                    &ppszMemberships,
-                    &dwMemberships);
-    BAIL_ON_PMD_ERROR(dwError);
-
-    *pppszMemberships = ppszMemberships;
-    *pdwMemberships = dwMemberships;
-cleanup:
-
-    if (pConn)
-    {
-        VmDirConnectionClose(pConn);
-    }
-
-    return dwError;
-
-error:
-    if (ppszMemberships != NULL && dwMemberships > 0)
-    {
-        VmDirFreeMemberships(ppszMemberships, dwMemberships);
-    }
-    goto cleanup;
-}
-
 static
 uint32_t
 get_local_memberships(
@@ -398,29 +295,6 @@ FQDN_to_DN(
     goto cleanup;
 }
 
-static
-uint32_t
-is_domain_group_member(
-    PSTR* ppszMemberships,
-    DWORD dwMemberships,
-    PCSTR pszGroupName
-    )
-{
-    uint32_t ret_val = 0;
-    uint32_t i = 0;
-
-    for (i = 0; i < dwMemberships; i++)
-    {
-        if(PMDStringCompareA(ppszMemberships[i], pszGroupName, FALSE) == 0)
-        {
-            ret_val = 1;
-            break;
-        }
-    }
-
-    return ret_val;
-}
-
 static
 uint32_t
 domain_group_membership_check(
@@ -428,58 +302,7 @@ domain_group_membership_check(
     const char* domain_group,
     uint32_t* allowed)
 {
-    uint32_t dwError = 0;
-    PSTR pszDomainName = NULL;
-    PSTR pszDomainNameDN = NULL;
-    PSTR pszGroupName = NULL;
-    PSTR *ppszMemberships = NULL;
-    uint32_t dwMemberships = 0;
-    *allowed = 0;
-    if(IsNullOrEmptyString(upn))
-    {
-        dwError = ERROR_PMD_INVALID_PARAMETER;
-        BAIL_ON_PMD_ERROR(dwError);
-
-    }
-
-    dwError = get_vmdir_memberships(
-                      upn,
-                      &ppszMemberships,
-                      &dwMemberships);
-    BAIL_ON_PMD_ERROR(dwError);
-
-    dwError = VmAfdGetDomainName(NULL, &pszDomainName);
-    BAIL_ON_PMD_ERROR(dwError);
-
-    dwError = FQDN_to_DN(
-                     pszDomainName,
-                     &pszDomainNameDN);
-    BAIL_ON_PMD_ERROR(dwError);
-
-    dwError = PMDAllocateStringPrintf(
-                     &pszGroupName,
-                     "cn=%s,cn=Builtin,%s",
-                     domain_group,
-                     pszDomainNameDN);
-    BAIL_ON_PMD_ERROR(dwError);
-
-    *allowed = is_domain_group_member(
-                    ppszMemberships,
-                    dwMemberships,
-                    pszGroupName);
-cleanup:
-
-    if (ppszMemberships != NULL && dwMemberships > 0)
-    {
-        VmDirFreeMemberships(ppszMemberships, dwMemberships);
-    }
-    PMDFreeMemory(pszDomainName);
-    PMDFreeMemory(pszDomainNameDN);
-    PMDFreeMemory(pszGroupName);
-    return dwError;
-
-error:
-    goto cleanup;
+    return ERROR_PMD_UNSUPPORTED_PROTOCOL;
 }
 
 uint32_t
diff --git a/server/security/includes.h b/server/security/includes.h
index 95c7b06..96f5dfb 100644
--- a/server/security/includes.h
+++ b/server/security/includes.h
@@ -38,7 +38,7 @@
 #include "pmdsecurity.h"
 #include "prototypes.h"
 
-#include <vmdirclient.h>
-#include <vmafdclient.h>
+#include<ldap.h>
 #include <openssl/rsa.h>
 #include <openssl/pem.h>
+
