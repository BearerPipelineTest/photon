From 01a1aec10779d09e9fe8a78230a0ac22a4a4a38f Mon Sep 17 00:00:00 2001
From: Shreenidhi Shedi <sshedi@vmware.com>
Date: Tue, 11 Jan 2022 14:59:49 +0530
Subject: [PATCH] enoX uses instance number for vmware hv

Signed-off-by: Shreenidhi Shedi <sshedi@vmware.com>
---
 src/udev/udev-builtin-net_id.c | 21 +++++++++++++++++++++
 1 file changed, 21 insertions(+)

diff --git a/src/udev/udev-builtin-net_id.c b/src/udev/udev-builtin-net_id.c
index 65e003eb15..efd233f95d 100644
--- a/src/udev/udev-builtin-net_id.c
+++ b/src/udev/udev-builtin-net_id.c
@@ -193,6 +193,27 @@ static int dev_pci_onboard(sd_device *dev, const LinkInfo *info, NetNames *names
         if (idx == 0 && !naming_scheme_has(NAMING_ZERO_ACPI_INDEX))
                 return log_device_debug_errno(names->pcidev, SYNTHETIC_ERRNO(EINVAL),
                                               "Naming scheme does not allow onboard index==0.");
+        if (idx >> 24) {
+                unsigned domain, bus, slot, func;
+                const char *device_sysname;
+                /*
+                 * VMware acpi_index format:
+                 * |31 instance 24|23     16|15     8|7    3|2    0|
+                 * |    number    | domain? |   bus  | slot | func |
+                 *
+                 * Let's use instance number to get enoX human readable
+                 */
+                r = sd_device_get_sysname(names->pcidev, &device_sysname);
+                if (r < 0)
+                        return r;
+
+                if (sscanf(device_sysname, "%x:%x:%x.%u", &domain, &bus, &slot, &func) != 4)
+                        return -ENOENT;
+
+                if ((idx & 0xffff) == ((bus << 8) | (slot << 3) | func))
+                        idx >>= 24;
+        }
+
         if (!is_valid_onboard_index(idx))
                 return log_device_debug_errno(names->pcidev, SYNTHETIC_ERRNO(ENOENT),
                                               "Not a valid onboard index: %lu", idx);
-- 
2.33.1

