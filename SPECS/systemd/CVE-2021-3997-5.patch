From 9540e63b663f1b9d94dcdac4e6ff38c45d3705e9 Mon Sep 17 00:00:00 2001
From: Shreenidhi Shedi <sshedi@vmware.com>
Date: Sat, 8 Jan 2022 15:41:24 +0530
Subject: [PATCH 5/5] fix GREEDY_ALLOC0 usage

Signed-off-by: Shreenidhi Shedi <sshedi@vmware.com>
---
 src/basic/rm-rf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/basic/rm-rf.c b/src/basic/rm-rf.c
index 8f24340a4f..c72da2b37b 100644
--- a/src/basic/rm-rf.c
+++ b/src/basic/rm-rf.c
@@ -208,7 +208,7 @@ int rm_rf_children(
                 const struct stat *root_dev) {
 
         _cleanup_(free_todo_entries) TodoEntry *todos = NULL;
-        size_t n_todo = 0;
+        size_t n_todo = 0, todo_allocs = 0;
         _cleanup_free_ char *dirname = NULL; /* Set when we are recursing and want to delete ourselves */
         int ret = 0, r;
 
@@ -281,7 +281,7 @@ int rm_rf_children(
                         if (r == -EISDIR) {
                                 /* Push the current working state onto the todo list */
 
-                                 if (!GREEDY_REALLOC0(todos, n_todo + 2))
+                                 if (!GREEDY_REALLOC0(todos, todo_allocs, n_todo + 2))
                                          return log_oom();
 
                                  _cleanup_free_ char *newdirname = strdup(de->d_name);
-- 
2.33.1

