Events Tracing infrastructure contains lot of files, directories
(internally in terms of inodes, dentries). And ends up by comsuming
memory in MBs. We can have multiple events of Events Tracing, which
further requires more memory.

Instead of creating inodes/dentries, eventfs could keep meta-data and
skip to create inodes/dentries. As and when required, eventfs will 
create the inodes/dentries for only required files/directories. 
Also eventfs would delete the inodes/dentries once no more required
but preserve the meta data.

Refer Linux Plumbers Conference 2021 talk for more detail:
https://www.youtube.com/watch?v=09bVK3f0MPg&t=10755s

[PATCH 1/8]: Introducing struct tracefs_inode
[PATCH 2/8]: Adding eventfs-dir-add functions
[PATCH 3/8]: Adding eventfs-file-add function
[PATCH 4/8]: Adding eventfs-file-directory-remove function
[PATCH 5/8]: Adding functions to create-eventfs-files
[PATCH 6/8]: Adding eventfs lookup, read, open functions
[PATCH 7/8]: Creating tracefs_inode_cache
[PATCH 8/8]: Moving tracing events to eventfs

