From ff83fad656fc895778b48a710bca4fdc472dd4d3 Mon Sep 17 00:00:00 2001
From: Ajay Kaher <akaher@vmware.com>
Date: Mon, 21 Feb 2022 17:30:31 +0530
Subject: [PATCH 4/8] eventfs: adding eventfs file, directory remove function

Adding eventfs_remove(), this function will recursively remove
dir or file info from eventfs.

Signed-off-by: Ajay Kaher <akaher@vmware.com>
Co-developed-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
---
 fs/tracefs/event_inode.c | 31 +++++++++++++++++++++++++++++++
 include/linux/tracefs.h  |  2 ++
 2 files changed, 33 insertions(+)

diff --git a/fs/tracefs/event_inode.c b/fs/tracefs/event_inode.c
index f75d49c..95a6218 100644
--- a/fs/tracefs/event_inode.c
+++ b/fs/tracefs/event_inode.c
@@ -270,3 +270,34 @@ int eventfs_add_file(const char *name, umode_t mode,
 	list_add_tail(&ef->list, &ef_parent->ei->e_top_files);
 	return 1;
 }
+
+/**
+ * eventfs_remove - remove eventfs dir or file from list
+ * @eventfs_file: a pointer to eventfs_file to be removed.
+ *
+ * This function recursively remove eventfs_file which
+ * contains info of file or dir.
+ */
+void eventfs_remove(struct eventfs_file *ef)
+{
+	struct eventfs_file *ef_child, *n;
+
+	if(!ef)
+		return;
+
+	if (ef->ei) {
+		/* remove directory */
+		list_for_each_entry_safe(ef_child, n, &ef->ei->e_top_files, list) {
+			eventfs_remove(ef_child);
+		}
+		list_del(&ef->list);
+		kfree(ef->ei);
+		kfree(ef->name);
+		kfree(ef);
+	} else {
+		/* remove file */
+		list_del(&ef->list);
+		kfree(ef->name);
+		kfree(ef);
+	}
+}
diff --git a/include/linux/tracefs.h b/include/linux/tracefs.h
index 446763b..de268bb 100644
--- a/include/linux/tracefs.h
+++ b/include/linux/tracefs.h
@@ -55,6 +55,8 @@ int eventfs_add_top_file(const char *name, umode_t mode,
 			 struct dentry *parent, void *data,
 			 const struct file_operations *fops);
 
+void eventfs_remove(struct eventfs_file *ef);
+
 struct dentry *tracefs_create_file(const char *name, umode_t mode,
 				   struct dentry *parent, void *data,
 				   const struct file_operations *fops);
-- 
2.7.4

